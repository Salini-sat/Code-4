#include<stdio.h>
#include<stdlib.h>

struct Node{
    int data;
    struct Node* next;
};
void print(struct Node*ptr){
    while(ptr!=NULL){
        printf("%d\n",ptr->data);
        ptr=ptr->next;
    }
}
struct Node* delatbig(struct Node*head){
    struct Node* ptr = head;
    head=head->next;
    free(ptr);
    return head;
}

struct Node* delinbet(struct Node*head,int index){
    struct Node*ptr= head;
    struct Node* q = ptr->next;
    int i=0;
    while(i!=index-1 && ptr->next !=NULL){
        ptr=ptr->next;
        q=q->next;
        i++;
    }
    if(ptr->next!=NULL){
        ptr->next = q->next;
        free(q);
        ptr=head;
    }
    return head;
}

struct Node* delatlast(struct Node* head){
    struct Node*ptr=head;
    struct Node* q = head->next;
    while(q->next!=NULL){
        ptr=ptr->next;
        q=q->next;
    }
    ptr->next=NULL;
    free(q);
    return head;
}
struct Node* delatvalue(struct Node* head,int value){
    struct Node* p = head;
    struct Node* q = head->next;
    while(p->data!=value && q!=NULL){
        p=p->next;
        q=q->next;
    }
    if(q!=NULL){
        p->next=q->next;
        free(q);
    }
    
    return head;

}
int main(){
    struct Node* head;
    struct Node* second;
    struct Node* third;
    struct Node* fourth;

    head = (struct Node*)malloc(sizeof(struct Node));
    second = (struct Node*)malloc(sizeof(struct Node));
    third = (struct Node*)malloc(sizeof(struct Node));
    fourth= (struct Node*)malloc(sizeof(struct Node));

    head->data = 49;
    head->next = second ;

    second ->data = 57;
    second->next = third;

    third->data=34;
    third->next = fourth;

    fourth->data=90;
    fourth->next=NULL;

    printf("before deletion:\n");
    print(head);

    int a;
    scanf("%d",&a);

    head = delatvalue(head,a);
    printf("after deletion:\n");
    print(head);  
}
